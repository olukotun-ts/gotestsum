version: 2

workflows:
  version: 2
  testing:
    jobs:
      - test

jobs:
  test:
    docker:
      - image: circleci/golang:1.12
    parallelism: 3
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: Use forked runner
          command: go get github.com/olukotun-ts/gotestsum
      - run:
          name: Run unit tests
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=testname)
            echo $PACKAGE_NAMES
            # go test -v 2>&1 | go-junit-report > ${TEST_RESULTS}/go-junit-report.xml
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
      - run:
          name: Get timing data
          command: |
            mkdir -p /tmp/timing-data && cp -r $CIRCLE_INTERNAL_TASK_DATA/circle-test-results /tmp/timing-data
      - store_artifacts:
          destination: test-results
          path: /tmp/test-results
      - store_artifacts:
          destination: timing-data
          path: /tmp/timing-data
      - store_test_results:
          path: /tmp/test-results